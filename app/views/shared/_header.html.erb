
    <!-- ============================================ -->
<!--                 Navigation                   -->
<!-- ============================================ -->

<header id="cs-navigation">
    <div class="cs-container">
        <!--Nav Logo-->
        <%= link_to home_path, class: 'cs-logo', aria: { label: 'back to home' } do %>
            <%= image_tag 'svgs/logo-black.svg', alt: 'logo', width: 210, height: 29, aria_hidden: true, decoding: 'async' %>
        <% end %>
        <!--Navigation List-->
        <nav class="cs-nav" role="navigation">
            <!--Mobile Nav Toggle-->
            <button class="cs-toggle" aria-label="mobile menu toggle">
                <div class="cs-box" aria-hidden="true">
                    <span class="cs-line cs-line1" aria-hidden="true"></span>
                    <span class="cs-line cs-line2" aria-hidden="true"></span>
                    <span class="cs-line cs-line3" aria-hidden="true"></span>
                </div>
            </button>
            <!-- We need a wrapper div so we can set a fixed height on the cs-ul in case the nav list gets too long from too many dropdowns being opened and needs to have an overflow scroll. This wrapper acts as the background so it can go the full height of the screen and not cut off any overflowing nav items while the cs-ul stops short of the bottom of the screen, which keeps all nav items in view no matter how mnay there are-->
            <!-- This also allows for easy substitution of CodeStitch navigations. Just replace the .cs-ul-wrapper in the new navigation with this one -->
            <div class="cs-ul-wrapper">
                <ul id="cs-expanded" class="cs-ul" aria-expanded="false">

                    <!-- Loop through all pages with a eleventyNavigation in the frontmatter -->

                        <!-- Define a hasChild variable to make it easier to test what links are dropdowns-->


                        <!-- If this page is a dropdown, give it the appropriate classes, icons and accessibility attributes-->
                        <li class="cs-li " >

                            <!-- Similarly, if the link is active, apply the necessary classes -->
                            <a href="/" class="cs-li-link  cs-active ">
                                Home

                            </a>

                            <!-- Dropdowns have another ul/li set up within the parent li. Render in the same way as a normal link -->

                        </li>

                        <!-- Define a hasChild variable to make it easier to test what links are dropdowns-->


                        <!-- If this page is a dropdown, give it the appropriate classes, icons and accessibility attributes-->
                        <li class="cs-li " >

                            <!-- Similarly, if the link is active, apply the necessary classes -->
                            <a href="/about/" class="cs-li-link ">
                                About Us

                            </a>

                            <!-- Dropdowns have another ul/li set up within the parent li. Render in the same way as a normal link -->

                        </li>

                        <!-- Define a hasChild variable to make it easier to test what links are dropdowns-->


                        <!-- If this page is a dropdown, give it the appropriate classes, icons and accessibility attributes-->
                        <li class="cs-li " >

                            <!-- Similarly, if the link is active, apply the necessary classes -->
                            <a href="/projects/" class="cs-li-link ">
                                Projects

                            </a>

                            <!-- Dropdowns have another ul/li set up within the parent li. Render in the same way as a normal link -->

                        </li>

                        <!-- Define a hasChild variable to make it easier to test what links are dropdowns-->


                        <!-- If this page is a dropdown, give it the appropriate classes, icons and accessibility attributes-->
                        <li class="cs-li " >

                            <!-- Similarly, if the link is active, apply the necessary classes -->
                            <a href="/reviews/" class="cs-li-link ">
                                Reviews

                            </a>

                            <!-- Dropdowns have another ul/li set up within the parent li. Render in the same way as a normal link -->

                        </li>

                        <!-- Define a hasChild variable to make it easier to test what links are dropdowns-->


                        <!-- If this page is a dropdown, give it the appropriate classes, icons and accessibility attributes-->
                        <li class="cs-li " >

                            <!-- Similarly, if the link is active, apply the necessary classes -->
                            <a href="/blog/" class="cs-li-link ">
                                Blog

                            </a>

                            <!-- Dropdowns have another ul/li set up within the parent li. Render in the same way as a normal link -->

                        </li>

                </ul>
            </div>
        </nav>
        <a href="/contact" class="cs-button-solid cs-nav-button">Contact Us</a>
        <!--Dark Mode toggle, uncomment button code if you want to enable a dark mode toggle-->
        <button id="dark-mode-toggle" aria-label="dark mode toggle">
            <%= image_tag 'svgs/moon.svg', class: 'cs-moon', width: 480, height: 480 %>
            <%= image_tag "svgs/sun.svg", class: 'cs-sun', alt: 'sun', width: 15, height: 15, decoding: 'async', aria_hidden: true %>
        </button>
    </div>
</header>
